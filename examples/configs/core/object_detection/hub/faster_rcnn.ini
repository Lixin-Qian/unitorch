[core/cli]
task_name = core/task/supervised_task
from_ckpt_dir = ./cache
cache_dir = ./cache

# model
[core/model/detection/generalized_rcnn]
pretrained_name = pascal-voc-detection/faster-rcnn-r50-c4

# dataset
[core/dataset/ast]
# data columns: id, image, width, height, objects { bboxes, classes }, classes
data_name = fuliucansheng/pascal_voc
config_name = voc2007_main

[core/dataset/ast/train]
preprocess_functions = ['core/process/detectron2/generalized_detection(image, objects["bboxes"], objects["classes"])']

[core/dataset/ast/dev]
preprocess_functions = ['core/process/detectron2/generalized_detection(image, objects["bboxes"], objects["classes"], do_eval=True)']

[core/dataset/ast/test]
preprocess_functions = ['core/process/detectron2/generalized_image(image)']

# process
[core/process/detectron2/generalized]
pixel_mean = [103.53, 116.28, 123.675]
pixel_std = [1.0, 1.0, 1.0]
min_size_test = 800
max_size_test = 1333

[core/optim/adamw]
learning_rate = 0.001

# task
[core/task/supervised_task]
model = core/model/detection/generalized_rcnn
optim = core/optim/adamw
dataset = core/dataset/ast
score_fn = core/score/voc_map
monitor_fns = ['core/score/voc_map']
output_header = ['id', 'width', 'height', 'objects']
post_process_fn = core/postprocess/detectron2/generalized_detection
writer_fn = core/writer/csv

from_ckpt_dir = ${core/cli:from_ckpt_dir}
to_ckpt_dir = ${core/cli:cache_dir}
output_path = ${core/cli:cache_dir}/output.txt
train_batch_size = 4
dev_batch_size = 1
test_batch_size = 1
