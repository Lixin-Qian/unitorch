[core/cli]
task_name = core/task/supervised_task
from_ckpt_dir = ./cache
cache_dir = ./cache
train_file = ./train.tsv
dev_file = ./dev.tsv
test_file = ./test.tsv

# model
[core/model/detection/yolo]
pretrained_name = yolov5/yolov5s

# dataset
[core/dataset/ast]
names = ['image', 'bboxes', 'classes']

[core/dataset/ast/train]
data_files = ${core/cli:train_file}
preprocess_functions = ['core/process/detectron2/generalized_detection(image, eval(bboxes), eval(classes))']

[core/dataset/ast/dev]
data_files = ${core/cli:dev_file}
preprocess_functions = ['core/process/detectron2/generalized_detection(image, eval(bboxes), eval(classes), do_eval=True)']

[core/dataset/ast/test]
names = ['image']
data_files = ${core/cli:test_file}
preprocess_functions = ['core/process/detectron2/generalized_image(image)']

# process
[core/process/detectron2/generalized]
pixel_mean = [0.0, 0.0, 0.0]
pixel_std = [255.0, 255.0, 255.0]
resize_shape = [608, 608]

[core/optim/adamw]
learning_rate = 0.001

# task
[core/task/supervised_task]
model = core/model/detection/yolo
optim = core/optim/adamw
dataset = core/dataset/ast
score_fn = core/score/voc_map
monitor_fns = ['core/score/voc_map']
output_header = ['image']
post_process_fn = core/postprocess/detectron2/generalized_detection
writer_fn = core/writer/csv

from_ckpt_dir = ${core/cli:from_ckpt_dir}
to_ckpt_dir = ${core/cli:cache_dir}
output_path = ${core/cli:cache_dir}/output.txt
train_batch_size = 32
dev_batch_size = 64
test_batch_size = 64
